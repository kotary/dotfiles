[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <C-u>  [denite]
  nmap <silent> [denite]f :<C-u>Denite file/rec<CR>
'''
hook_source = '''
  if executable('rg')
    call denite#custom#var('file/rec', 'command',
          \ [ 'rg', '--files', '--follow', '--hidden', '--glob', '!.git' ])
  endif
  call denite#custom#map('insert', '<Esc>', '<denite:enter_mode:normal>', 'noremap')
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent> [Space]f :<C-u>Defx -listed -resume -buffer-name=tab`tabpagenr()`<CR>
'''

[plugins.ftplugin]
defx = '''
  " Define mappings
	nnoremap <silent><buffer><expr> <CR>
        \ defx#do_action('open')
  nnoremap <silent><buffer><expr> c
        \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> m
        \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
        \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> l
        \ defx#do_action('open')
  nnoremap <silent><buffer><expr> E
        \ defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> P
        \ defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> o
        \ defx#do_action('open_or_close_tree')
  nnoremap <silent><buffer><expr> K
        \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N
        \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> M
        \ defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> C
        \ defx#do_action('toggle_columns',
        \       'mark:indent:icon:filename:type:size:time')
  nnoremap <silent><buffer><expr> S
        \ defx#do_action('toggle_sort', 'time')
  nnoremap <silent><buffer><expr> d
        \ defx#do_action('remove')
  nnoremap <silent><buffer><expr> r
        \ defx#do_action('rename')
  nnoremap <silent><buffer><expr> !
        \ defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> x
        \ defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> yy
        \ defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> .
        \ defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> ;
        \ defx#do_action('repeat')
  nnoremap <silent><buffer><expr> h
        \ defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> ~
        \ defx#do_action('cd')
  nnoremap <silent><buffer><expr> q
        \ defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space>
        \ defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *
        \ defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> j
        \ line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k
        \ line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> <C-l>
        \ defx#do_action('redraw')
  nnoremap <silent><buffer><expr> <C-g>
        \ defx#do_action('print')
  nnoremap <silent><buffer><expr> cd
        \ defx#do_action('change_vim_cwd')
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = [ 'context_filetype.vim' ]
on_i = 1
hook_source = '''
  call deoplete#enable()
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
on_source = 'deoplete.nvim'
rev = 'next'
build = 'bash install.sh'
on_i = 1
hook_source = '''
  " Required for operations modifying multiple buffers like rename
  set hidden
  let g:LanguageClient_serverCommands = {
  \ 'ruby': [ 'solargraph', 'stdio' ],
  \ }
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
depends = [ 'vimproc.vim' ]
on_cmd = 'QuickRun'
hook_add = '''
  nnoremap [Space]r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
  vnoremap [Space]r :QuickRun -mode n<CR>
'''
hook_source = '''
  let g:quickrun_config = {
        \ '_': {
        \   'runner': 'vimproc',
        \   'runner/vimproc/updatetime': 100,
        \   'outputter': 'error',
        \   'outputter/error/success': 'buffer',
        \   'outputter/error/error': 'quickfix',
        \   'outputter/buffer/split': ':botright 8sp',
        \ },
        \ }
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

########################################
# Edit
########################################

[[plugins]]
repo = 'scrooloose/nerdcommenter'
on_map = { n = '<Plug>' }
hook_add = '''
  let g:NERDSpaceDelims=1
  let g:NERDDefaultAlign='left'
  let g:NERDCompactSexyComs = 1
  map <silent>co <Plug>NERDCommenterToggle
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_cmd = 'EasyAlign'
hook_add = '''
vnoremap <silent> <Enter> :EasyAlign<cr>
'''

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = { n = '<Plug>' }
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'

########################################
# Language / Filetype
########################################

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = 'markdown'
depends = [ 'vim-markdown-quote-syntax' ]
hook_source = '''
  let g:vim_markdown_folding_disabled = 1
'''
[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = 'javascript'

[[plugins]]
repo = 'othree/es.next.syntax.vim'
depends = [ 'yajs.vim' ]
on_ft = 'javascript'

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
depends = [ 'yajs.vim' ]
on_ft = 'javascript'
