#!/bin/bash

function committer_date() {
  h=$1
  date=$(git log --format="%H	%ci" | grep "${h}" | cut -f2)
  echo $date
}

function bodies_after() {
  date=$1
  logs=$(git log --format="%H	%b" --since="${date}" | head -n -1 | cut -f2)
  echo -e "$logs"
}

function head_hash() {
  echo $(git log --format="%H" | head -n 1)
}

# get absolute path to dir of the dotfiles' repo
REPO_DIR="$(cd $(dirname $0) && pwd)/../.."
# load convenient functions
. ${REPO_DIR}/sh/util.sh

PREV_HEAD_FILE="${REPO_DIR}/cache/.prev_commit_head"
EXEC=/bin/bash
MAKESH="${REPO_DIR}/make.sh"

log info "Starting post-merge hook"

if [ -e ${PREV_HEAD_FILE} ]; then
  prev_update=$(cat ${PREV_HEAD_FILE})
  date=$(committer_date ${prev_update})
  messages=$(bodies_after "${date}")

  targets=$(echo -e "${messages}" | grep -E "^\!" | sed -e "s/^\!//" | sort | uniq)

  echo -e "${targets}" | while read target
  do
    log info "Updating ${target}"
    if [ -n "${target}" ]; then
      ${EXEC} ${MAKESH} clean ${target} && ${EXEC} ${MAKESH} install ${target}
    fi
  done

  cmds=$(echo -e "${messages}" | grep -E "^\-" | sed -e "s/^\-//")
  echo -e "${cmds}" | while read cmd
  do
    log info "Executing ${cmd}"
    if [ -n "${cmd}" ]; then
      ${EXEC} -c "${cmd}"
    fi
  done

  echo $(head_hash) > ${PREV_HEAD_FILE}
else
  ${EXEC} ${MAKESH} clean && ${EXEC} ${MAKESH} install
  touch ${PREV_HEAD_FILE}
  echo $(head_hash) > ${PREV_HEAD_FILE}
fi
