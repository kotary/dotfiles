" NeoBundle's settings

if has('vim_starting')
  if &compatible
    set nocompatible
  endif

  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Start of NeoBundle
call neobundle#begin(expand("~/.vim/bundle/"))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'Shougo/unite.vim'
" 非同期処理で高負荷処理時の遅延を防ぐ
NeoBundle "Shougo/vimproc", { "build": { "mac": "make -f make_max.mak", "unix": "make -f make_unix.mak" } }

" 即時実行
NeoBundle 'thinca/vim-quickrun'

" ディレクトリツリー
NeoBundle 'scrooloose/nerdtree'
nnoremap <silent><C-l> :NERDTreeToggle<CR>

" コード補完
"NeoBundle 'Shougo/neocomplete.vim'
"NeoBundle 'marcus/rsense'
"NeoBundle 'supermomonga/neocomplete-rsense.vim'

" 静的解析
"NeoBundle 'scrooloose/syntastic'

" ドキュメント参照
"NeoBundle 'thinca/vim-ref'
"NeoBundle 'yuku-t/vim-ref-ri'

" メソッド定義元へのジャンプ
NeoBundle 'szw/vim-tags'

" 自動で閉じる
NeoBundle 'tpope/vim-endwise'

" Original repos on github
NeoBundle "tyru/caw.vim.git"
nmap co <Plug>(caw:i:toggle)
vmap co <Plug>(caw:i:toggle)
" vim-scripts repos
" Non github repos
" Non git repos

" End of NeoBundle
call neobundle#end()

" Installation check.
NeoBundleCheck

" -------------------------------
" Rsense
" -------------------------------
let g:rsenseHome = '/opt/rsense-0.3'
let g:rsenseUseOmniFunc = 1

" --------------------------------
" neocomplete.vim
" --------------------------------
let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
if !exists('g:neocomplete#force_omni_input_patterns')
  let g:neocomplete#force_omni_input_patterns = {}
endif
let g:neocomplete#force_omni_input_patterns.ruby = '[^.*\t]\.\w*\|\h\w*::'

" --------------------------------
" rubocop
" --------------------------------
" syntastic_mode_mapをactiveにするとバッファ保存時にsyntasticが走る
" active_filetypesに、保存時にsyntasticを走らせるファイルタイプを指定する
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['ruby'] }
let g:syntastic_ruby_checkers = ['rubocop']
